{"version":3,"file":"static/js/610.871a59b9.chunk.js","mappings":"+NAAaA,EAAe,CACxBC,MAAO,GACPC,SAAU,ICFDC,EACF,CACHC,MAAO,QACPC,KAAM,QACNC,KAAM,QACNC,YAAa,kBACbC,UAAU,GANLL,EAQC,CACNC,MAAO,WACPC,KAAM,WACNC,KAAM,WACNC,YAAa,qBACbC,UAAU,G,SCSlB,MAbA,YAAkC,IAAbC,EAAY,EAAZA,SACjB,GAA8CC,EAAAA,EAAAA,GAAQ,CAAED,SAAAA,EAAUT,aAAAA,IAA1DW,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAErBZ,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAEf,OACI,kBAAMO,SAAUI,EAAhB,WACI,SAACC,EAAA,GAAD,QAAWC,MAAOd,EAAOe,SAAUJ,GAAkBT,KACrD,SAACW,EAAA,GAAD,QAAWC,MAAOb,EAAUc,SAAUJ,GAAkBT,KACxD,SAACc,EAAA,EAAD,CAAQC,KAAK,QAAQZ,KAAK,eCJtC,MAXA,WAKI,OACI,+BACI,SAAC,EAAD,CAAWG,SANnB,SAAkBU,GACdC,QAAQC,IAAI,OAAQF,SCM5B,MATA,WACI,OACI,6BACI,wCACA,SAAC,EAAD,S,6ECLZ,K,SCcA,MAVA,YAAmF,IAA9Df,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,KAAMS,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUT,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAC5Dc,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,QAAU,IAEnC,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,UACKtB,IAAS,kBAAOqB,UAAWC,EAAAA,MAAcC,QAASL,EAAzC,SAA+ClB,KACzD,kBAAOqB,UAAWC,EAAAA,MAAcJ,GAAIA,EAAIjB,KAAMA,EAAMC,KAAMA,EAAMS,MAAOA,EAAOC,SAAUA,EAAUT,YAAaA,EAAaC,SAAUA,S,gECiBlJ,IA1BgB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,SAAUT,EAAkB,EAAlBA,aACxB,GAA0B4B,EAAAA,EAAAA,WAAS,UAAI5B,IAAvC,eAAOW,EAAP,KAAckB,EAAd,KAgBMC,EAAQ,WACdD,GAAS,UACF7B,KAIP,MAAO,CAACW,MAAAA,EAAOkB,SAAAA,EAAUjB,aApBJ,SAAC,GAAc,IAAbmB,EAAY,EAAZA,OACX1B,EAA+B0B,EAA/B1B,KAAMU,EAAyBgB,EAAzBhB,MAAOT,EAAkByB,EAAlBzB,KAAM0B,EAAYD,EAAZC,QACrBC,EAAoB,aAAT3B,EAAsB0B,EAAUjB,EACjDc,GAAS,SAAAK,GAAS,yBACXA,GADW,cAEb7B,EAAO4B,QAeuBpB,aAXlB,SAACsB,GAClBA,EAAEC,iBACF3B,GAAS,UAAIE,IACbmB,KAQiDA,MAAAA","sources":["modules/Login/LoginForm/initialState.js","modules/Login/LoginForm/fields.js","modules/Login/LoginForm/LoginForm.jsx","modules/Login/Login.jsx","pages/LoginPage/LoginPage.jsx","shared/components/TextFiled/textFields.module.css","shared/components/TextFiled/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const initialState = {\n    email: '',\n    password: '',\n}","export const fields = {\n    email: {\n        label: 'Email',\n        name: 'email',\n        type: 'email',\n        placeholder: 'Type your email',\n        required: true,\n    },\n    password: {\n        label: 'Password',\n        name: 'password',\n        type: 'password',\n        placeholder: 'Type your password',\n        required: true,\n    }\n}","\nimport useForm from \"shared/hooks/useForm\";\n\nimport TextField from \"shared/components/TextFiled/TextField\";\nimport Button from \"shared/components/Button\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\n\nfunction LoginForm({ onSubmit }) {\n    const { state, handleChange, handleSubmit } = useForm({ onSubmit, initialState });\n\n    const { email, password } = state;\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <TextField value={email} onChange={handleChange} {...fields.email} />\n            <TextField value={password} onChange={handleChange} {...fields.password} />\n            <Button text=\"Login\" type=\"submit\"/>\n        </form>\n    )\n}\nexport default LoginForm;","\nimport LoginForm from \"./LoginForm\";\n\nfunction Login() {\n    function onSubmit(data) {\n        console.log('data', data)\n    }\n    \n    return (\n        <>\n            <LoginForm onSubmit={onSubmit} />\n        </>\n    )\n };\nexport default Login;","import Login from \"modules/Login\";\n\nfunction LoginPage() { \n    return (\n        <main>\n            <h1>Login Page</h1>\n            <Login />\n        </main>\n    )\n};\n\nexport default LoginPage;","// extracted by mini-css-extract-plugin\nexport default {};","import { useMemo } from \"react\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nimport styles from './textFields.module.css';\n\nfunction TextField({ label, name, type, value, onChange, placeholder, required }) { \n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            {label && <label className={styles.label} htmlFor={id} >{label}</label>}\n            <input className={styles.input} id={id} name={name} type={type} value={value} onChange={onChange} placeholder={placeholder} required={required} />\n        </div>\n    )\n};\nexport default TextField;","import {useState} from \"react\";\n    \nconst useForm = ({onSubmit, initialState}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        reset();\n    };\n    const reset = () => {\n    setState({\n        ...initialState\n      })\n  }\n\n    return {state, setState, handleChange, handleSubmit, reset};\n}\n\nexport default useForm;"],"names":["initialState","email","password","fields","label","name","type","placeholder","required","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","onChange","Button","text","data","console","log","id","useMemo","nanoid","className","styles","htmlFor","useState","setState","reset","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}